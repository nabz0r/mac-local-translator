name: MacLocalTranslator CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: macos-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Swift
      uses: fwal/setup-swift@v1
      with:
        swift-version: '5.7'
    
    - name: Cache Swift packages
      uses: actions/cache@v2
      with:
        path: .build
        key: ${{ runner.os }}-spm-${{ hashFiles('Package.swift') }}
        restore-keys: ${{ runner.os }}-spm-
    
    - name: Build
      run: swift build
    
    - name: Run tests
      run: swift test
  
  lint:
    runs-on: macos-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Install SwiftLint
      run: brew install swiftlint
    
    - name: Run SwiftLint
      run: swiftlint lint --reporter github-actions-logging
  
  deploy:
    needs: [build, lint]
    if: github.event_name == 'push' && contains(github.ref, 'refs/tags/')
    runs-on: macos-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Swift
      uses: fwal/setup-swift@v1
      with:
        swift-version: '5.7'
    
    - name: Build Release
      run: swift build -c release
    
    - name: Create DMG
      run: |
        mkdir -p .build/dmg
        cp -R .build/release/MacLocalTranslator .build/dmg/
        hdiutil create -volname "Mac Local Translator" -srcfolder .build/dmg -ov -format UDZO .build/MacLocalTranslator.dmg
    
    - name: Get Tag Version
      id: get_version
      run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_ENV
    
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Mac Local Translator ${{ env.VERSION }}
        draft: false
        prerelease: false
    
    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: .build/MacLocalTranslator.dmg
        asset_name: MacLocalTranslator-${{ env.VERSION }}.dmg
        asset_content_type: application/x-apple-diskimage
